1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:HL["/_next/static/css/4e35fc7145142800.css","style",{"crossOrigin":""}]
0:["F5wa6sU7YK9iajx6_K5OJ",[[["",{"children":["articles",{"children":[["slug","algorithms/dynamic-programming/longest-path-in-ordered-graph","c"],{"children":["__PAGE__?{\"slug\":[\"algorithms\",\"dynamic-programming\",\"longest-path-in-ordered-graph\"]}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/4e35fc7145142800.css","precedence":"next","crossOrigin":""}]],"$L4"]]]]
5:HL["/_next/static/css/4bccb028aebe19da.css","style",{"crossOrigin":""}]
6:I[5420,["326","static/chunks/326-dcee1ff54fa4f70c.js","185","static/chunks/app/layout-99393772be94611b.js"],""]
7:I[6954,[],""]
8:I[7264,[],""]
b:I[8326,["954","static/chunks/d3ac728e-1e5d8b71e3d43fec.js","326","static/chunks/326-dcee1ff54fa4f70c.js","496","static/chunks/app/articles/%5B...slug%5D/page-2e651ae38096a6f7.js"],""]
c:T518,M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z3:[null,["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__className_e66fe9 Layout_body__oXsmr","children":[["$","header",null,{"children":["$","$L6",null,{}]}],["$","main",null,{"className":"Layout_main__luTTh","children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"initialChildNode":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","articles","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","initialChildNode":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","articles","children",["slug","algorithms/dynamic-programming/longest-path-in-ordered-graph","c"],"children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","initialChildNode":["$L9","$La",null],"childPropSegment":"__PAGE__?{\"slug\":[\"algorithms\",\"dynamic-programming\",\"longest-path-in-ordered-graph\"]}","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/4bccb028aebe19da.css","precedence":"next","crossOrigin":""}]]}],"childPropSegment":["slug","algorithms/dynamic-programming/longest-path-in-ordered-graph","c"],"styles":null}],"childPropSegment":"articles","styles":null}]}],["$","footer",null,{"children":["$","div",null,{"className":"Footer_container__Z8cUU","children":[["$","$Lb",null,{"href":"https://il.linkedin.com/in/tal-glanzman","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 448 512","children":["$undefined",[["$","path","0",{"d":"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z","children":"$undefined"}]]],"className":"$undefined","style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}],["$","$Lb",null,{"href":"https://github.com/tglanz","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 496 512","children":["$undefined",[["$","path","0",{"d":"$c","children":"$undefined"}]]],"className":"$undefined","style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}]]}]}]]}]}],null]
4:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Article"}],["$","meta","3",{"name":"description","content":"Personal site"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","5",{"name":"next-size-adjust"}]]
d:I[6222,["954","static/chunks/d3ac728e-1e5d8b71e3d43fec.js","326","static/chunks/326-dcee1ff54fa4f70c.js","496","static/chunks/app/articles/%5B...slug%5D/page-2e651ae38096a6f7.js"],"ArticleContent"]
e:T660,
A directed graph $G=(V, E)$ is **ordererd**  

if
$$
  \forall (v_i, v_j) \in E \Rightarrow i < j
$$

and
$$
  \forall v_i \in V / \\{ v_n \\} ~;~ \exists j>i, e=(v_i, v_j) \in E
$$

**The problem**

Given such graph, find the length of the longest path from $v_1$ to $v_n$ where $n = |V|$.

**Illustration**

{{< mermaid >}}
  graph LR
    v1 --> v2
    v3 --> v4
    v4 --> v5
    v1 --> v4
    v2 --> v4
    v2 --> v5
{{</ mermaid >}}

For this example, the longest path is $(v_1, v_2) \rightarrow (v_2, v_4) \rightarrow (v_4, v_5)$.

**Solution**

We shall define $opt(i)$ to indicate the length of the longest path from $v_1$ to $v_i$ by

$$
  opt(0) = 0
$$

$$
  opt(i)_{1 > 0} = 1 + \max \\{ opt(k) | (v_k, v_i) \in E \\}
$$

The answer we are looking for is given by $opt(n)$.

The intuition here is breaking the problem into smaller subproblems. The most straight forward way of doing so is by starting from $v_1$ and incrementally adding more vertices into consideration.

**Psuedo**

As always, pseudo is very important in dynamic programming algorithms in order to illustrate pattenr of building the data structure (bottom up).

- Initialize opt
  - $opt \leftarrow array(n)$
  - $opt[0] \leftarrow 0$
  - $\forall i \in \\{ 1, 2, ..., n \\}$
    - $opt[i] \leftarrow nil$
- Build opt in a bottom up fashion
  - $for ~ i \leftarrow 1 ~ to ~ n$
    - $opt[i] \leftarrow 1 + \max \\{ opt(k) | (v_k, v_i) \in E \\}$
- Return $opt[n]$

**Time Complexity**

- Initialization of opt is $O(n)$
- Building opt takes $O(n)$ iterations
  - Each iteration takes $O(n)$ accesses to opt

So in total, the time complexity is $O(n^2)$f:Ta8d,<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
  </head>
  <body>
    <nav class="toc">
      <ol class="toc-level toc-level-1"></ol>
    </nav>
    <p>A directed graph $G=(V, E)$ is <strong>ordererd</strong></p>
    <p>
      if
      $$
      \forall (v_i, v_j) \in E \Rightarrow i &#x3C; j
      $$
    </p>
    <p>
      and
      $$
      \forall v_i \in V / \{ v_n \} <del>;</del> \exists j>i, e=(v_i, v_j) \in E
      $$
    </p>
    <p><strong>The problem</strong></p>
    <p>Given such graph, find the length of the longest path from $v_1$ to $v_n$ where $n = |V|$.</p>
    <p><strong>Illustration</strong></p>
    <p>
      {{&#x3C; mermaid >}}
      graph LR
      v1 --> v2
      v3 --> v4
      v4 --> v5
      v1 --> v4
      v2 --> v4
      v2 --> v5
      {{&#x3C;/ mermaid >}}
    </p>
    <p>For this example, the longest path is $(v_1, v_2) \rightarrow (v_2, v_4) \rightarrow (v_4, v_5)$.</p>
    <p><strong>Solution</strong></p>
    <p>We shall define $opt(i)$ to indicate the length of the longest path from $v_1$ to $v_i$ by</p>
    <p>
      $$
      opt(0) = 0
      $$
    </p>
    <p>
      $$
      opt(i)_{1 > 0} = 1 + \max \{ opt(k) | (v_k, v_i) \in E \}
      $$
    </p>
    <p>The answer we are looking for is given by $opt(n)$.</p>
    <p>The intuition here is breaking the problem into smaller subproblems. The most straight forward way of doing so is by starting from $v_1$ and incrementally adding more vertices into consideration.</p>
    <p><strong>Psuedo</strong></p>
    <p>As always, pseudo is very important in dynamic programming algorithms in order to illustrate pattenr of building the data structure (bottom up).</p>
    <ul>
      <li>Initialize opt
        <ul>
          <li>$opt \leftarrow array(n)$</li>
          <li>$opt[0] \leftarrow 0$</li>
          <li>$\forall i \in \{ 1, 2, ..., n \}$
            <ul>
              <li>$opt[i] \leftarrow nil$</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>Build opt in a bottom up fashion
        <ul>
          <li>$for ~ i \leftarrow 1 ~ to ~ n$
            <ul>
              <li>$opt[i] \leftarrow 1 + \max \{ opt(k) | (v_k, v_i) \in E \}$</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>Return $opt[n]$</li>
    </ul>
    <p><strong>Time Complexity</strong></p>
    <ul>
      <li>Initialization of opt is $O(n)$</li>
      <li>Building opt takes $O(n)$ iterations
        <ul>
          <li>Each iteration takes $O(n)$ accesses to opt</li>
        </ul>
      </li>
    </ul>
    <p>So in total, the time complexity is $O(n^2)$</p>
  </body>
</html>
a:["$","div",null,{"children":[["$","h1",null,{"children":"Longest Path in Ordered Graph"}],["$","div",null,{"className":"Taxonomy_container__C2Vdb","children":["$","div",null,{"className":"Taxonomy_values__yvK16","children":[["$","$Lb","0",{"href":"/tags/Dynamic Programming","children":["$","div",null,{"className":"Chip_container__q1AW2","children":"Dynamic Programming"}]}]]}]}],["$","$Ld",null,{"content":{"raw":"$e","html":"$f"}}]]}]
9:null
