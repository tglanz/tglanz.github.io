{"pageProps":{"article":{"id":"elastic/usecase-1","filePath":"/home/runner/work/tglanz.github.io/tglanz.github.io/content/elastic/usecase-1.md","metadata":{"title":"Elasticsearch, Usecase 1, Simple rollover","description":null,"permalink":null,"priority":0,"tags":["Elasticsearch","ILM"],"categories":["Elasticsearch"]},"content":{"raw":"\n# Use case\n\nCreate ILM policy with the following\n\n- Rollover daily\n- Delete indexes that are older than 3 days \n\n# Steps\n\n## ILM Policy\n\nCreate an ILM policy named ```tal``` using the [ILM Policy API](https://www.elastic.co/guide/en/elasticsearch/reference/current/index-lifecycle-management-api.html).\n\nAt first we specify that the ```hot``` phase should rollover on a daily basis.\n\nWe also specify that the ```delete``` phase contains indices with a minimum age of 3 days. To delete the indices that are in the delete phase  we need to add the ```delete``` action to the phase - It is not implicit.\n\n```\nPUT _ilm/policy/tal\n{\n  \"policy\": {\n    \"phases\": {\n      \"hot\": {\n        \"actions\": {\n          \"rollover\": {\n            \"max_age\": \"1d\"\n          }\n        }\n      },\n      \"delete\": {\n        \"min_age\": \"3d\",\n        \"actions\": {\n          \"delete\": {} \n        }\n      }\n    }\n  }\n}\n```\n\nTo verify, get the newly created policy by\n\n```\nGET _ilm/policy/tal\n```\n\n## Index Template\n\nCreate an index template.\n\nOur intention is to have rollover that will create 3 indices in the form ```tal-00001```, ```tal-00002``` and ```tal-00003```. In order to interact with those as a single index we provide an ```alias``` for them. For example, we could have searched them by pattern or individually, but it's preferable to have a virtual, single ```tal``` index that we could interact with. On a technical level, Elasticsearch needs an alias so it can manage the rollovers with.\n\nSo we will apply an index template using a pattern of ```tal-*```, specify the alias ```tal``` and attach the ILM policy ```tal``` which has been created beforehand.\n\n```\nPUT _index_template/tal\n{\n  \"index_patterns\": [\"tal-*\"], \n  \"template\": {\n    \"settings\": {\n      \"index.lifecycle.name\": \"tal\",\n      \"index.lifecycle.rollover_alias\": \"tal\"\n    }\n  }\n}\n```\n\nTo verify, get the newly created template by\n\n```\nGET _index_template/tal\n```\n\n## Create the index\n\nThe index ```tal``` should be just an alias. If we will insert documents to ```tal``` it will be created concretely which is not what we want.\n\nWe need to create the first aliased index ```tal-00001``` and specify that it is the current write index.\n\n```\nPUT tal-00001\n{\n  \"aliases\": {\n    \"tal\": {\n      \"is_write_index\": true,\n      \"is_hidden\": false\n    }\n  },\n  \"mappings\": {\n    \"properties\": {\n      \"timestamp\": {\n        \"type\": \"date\" \n      }\n    }\n  }\n}\n```\n\nNow we can insert documents to ```tal``` - Notice it is inserted to the managed indices.\n\n# Further notes\n\n## Explaining ILM state\n\nTo review the state of the policy with respect to the indices we can run\n\n```\nGET tal/_ilm/explain\n```\n\nIt indicates what phase every index is at, it's age, size etc...\n","html":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h1>Use case</h1>\n    <p>Create ILM policy with the following</p>\n    <ul>\n      <li>Rollover daily</li>\n      <li>Delete indexes that are older than 3 days</li>\n    </ul>\n    <h1>Steps</h1>\n    <h2>ILM Policy</h2>\n    <p>Create an ILM policy named <code>tal</code> using the <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/index-lifecycle-management-api.html\">ILM Policy API</a>.</p>\n    <p>At first we specify that the <code>hot</code> phase should rollover on a daily basis.</p>\n    <p>We also specify that the <code>delete</code> phase contains indices with a minimum age of 3 days. To delete the indices that are in the delete phase we need to add the <code>delete</code> action to the phase - It is not implicit.</p>\n    <pre><code class=\"hljs language-properties\"><span class=\"hljs-attr\">PUT</span> <span class=\"hljs-string\">_ilm/policy/tal</span>\n<span class=\"hljs-attr\">{</span>\n  <span class=\"hljs-attr\">\"policy\"</span>: <span class=\"hljs-string\">{</span>\n    <span class=\"hljs-attr\">\"phases\"</span>: <span class=\"hljs-string\">{</span>\n      <span class=\"hljs-attr\">\"hot\"</span>: <span class=\"hljs-string\">{</span>\n        <span class=\"hljs-attr\">\"actions\"</span>: <span class=\"hljs-string\">{</span>\n          <span class=\"hljs-attr\">\"rollover\"</span>: <span class=\"hljs-string\">{</span>\n            <span class=\"hljs-attr\">\"max_age\"</span>: <span class=\"hljs-string\">\"1d\"</span>\n          <span class=\"hljs-attr\">}</span>\n        <span class=\"hljs-attr\">}</span>\n      <span class=\"hljs-attr\">},</span>\n      <span class=\"hljs-attr\">\"delete\"</span>: <span class=\"hljs-string\">{</span>\n        <span class=\"hljs-attr\">\"min_age\"</span>: <span class=\"hljs-string\">\"3d\",</span>\n        <span class=\"hljs-attr\">\"actions\"</span>: <span class=\"hljs-string\">{</span>\n          <span class=\"hljs-attr\">\"delete\"</span>: <span class=\"hljs-string\">{} </span>\n        <span class=\"hljs-attr\">}</span>\n      <span class=\"hljs-attr\">}</span>\n    <span class=\"hljs-attr\">}</span>\n  <span class=\"hljs-attr\">}</span>\n<span class=\"hljs-attr\">}</span>\n</code></pre>\n    <p>To verify, get the newly created policy by</p>\n    <pre><code class=\"hljs language-awk\">GET _ilm<span class=\"hljs-regexp\">/policy/</span>tal\n</code></pre>\n    <h2>Index Template</h2>\n    <p>Create an index template.</p>\n    <p>Our intention is to have rollover that will create 3 indices in the form <code>tal-00001</code>, <code>tal-00002</code> and <code>tal-00003</code>. In order to interact with those as a single index we provide an <code>alias</code> for them. For example, we could have searched them by pattern or individually, but it's preferable to have a virtual, single <code>tal</code> index that we could interact with. On a technical level, Elasticsearch needs an alias so it can manage the rollovers with.</p>\n    <p>So we will apply an index template using a pattern of <code>tal-*</code>, specify the alias <code>tal</code> and attach the ILM policy <code>tal</code> which has been created beforehand.</p>\n    <pre><code class=\"hljs language-properties\"><span class=\"hljs-attr\">PUT</span> <span class=\"hljs-string\">_index_template/tal</span>\n<span class=\"hljs-attr\">{</span>\n  <span class=\"hljs-attr\">\"index_patterns\"</span>: <span class=\"hljs-string\">[\"tal-*\"], </span>\n  <span class=\"hljs-attr\">\"template\"</span>: <span class=\"hljs-string\">{</span>\n    <span class=\"hljs-attr\">\"settings\"</span>: <span class=\"hljs-string\">{</span>\n      <span class=\"hljs-attr\">\"index.lifecycle.name\"</span>: <span class=\"hljs-string\">\"tal\",</span>\n      <span class=\"hljs-attr\">\"index.lifecycle.rollover_alias\"</span>: <span class=\"hljs-string\">\"tal\"</span>\n    <span class=\"hljs-attr\">}</span>\n  <span class=\"hljs-attr\">}</span>\n<span class=\"hljs-attr\">}</span>\n</code></pre>\n    <p>To verify, get the newly created template by</p>\n    <pre><code class=\"hljs language-properties\"><span class=\"hljs-attr\">GET</span> <span class=\"hljs-string\">_index_template/tal</span>\n</code></pre>\n    <h2>Create the index</h2>\n    <p>The index <code>tal</code> should be just an alias. If we will insert documents to <code>tal</code> it will be created concretely which is not what we want.</p>\n    <p>We need to create the first aliased index <code>tal-00001</code> and specify that it is the current write index.</p>\n    <pre><code class=\"hljs language-properties\"><span class=\"hljs-attr\">PUT</span> <span class=\"hljs-string\">tal-00001</span>\n<span class=\"hljs-attr\">{</span>\n  <span class=\"hljs-attr\">\"aliases\"</span>: <span class=\"hljs-string\">{</span>\n    <span class=\"hljs-attr\">\"tal\"</span>: <span class=\"hljs-string\">{</span>\n      <span class=\"hljs-attr\">\"is_write_index\"</span>: <span class=\"hljs-string\">true,</span>\n      <span class=\"hljs-attr\">\"is_hidden\"</span>: <span class=\"hljs-string\">false</span>\n    <span class=\"hljs-attr\">}</span>\n  <span class=\"hljs-attr\">},</span>\n  <span class=\"hljs-attr\">\"mappings\"</span>: <span class=\"hljs-string\">{</span>\n    <span class=\"hljs-attr\">\"properties\"</span>: <span class=\"hljs-string\">{</span>\n      <span class=\"hljs-attr\">\"timestamp\"</span>: <span class=\"hljs-string\">{</span>\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"date\" </span>\n      <span class=\"hljs-attr\">}</span>\n    <span class=\"hljs-attr\">}</span>\n  <span class=\"hljs-attr\">}</span>\n<span class=\"hljs-attr\">}</span>\n</code></pre>\n    <p>Now we can insert documents to <code>tal</code> - Notice it is inserted to the managed indices.</p>\n    <h1>Further notes</h1>\n    <h2>Explaining ILM state</h2>\n    <p>To review the state of the policy with respect to the indices we can run</p>\n    <pre><code class=\"hljs language-awk\">GET tal<span class=\"hljs-regexp\">/_ilm/</span>explain\n</code></pre>\n    <p>It indicates what phase every index is at, it's age, size etc...</p>\n  </body>\n</html>\n"}}},"__N_SSG":true}