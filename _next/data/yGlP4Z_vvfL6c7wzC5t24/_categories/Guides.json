{"pageProps":{"category":"Guides","articles":[{"id":"posts/archlinux-installation-guide","filePath":"/home/runner/work/tglanz.github.io/tglanz.github.io/content/posts/archlinux-installation-guide.md","metadata":{"title":"Archlinux Installation Guide","description":null,"permalink":null,"priority":0,"tags":["Archlinux","Linux"],"categories":["Guides"]},"content":{"raw":"\n# arch boot spec\n\nthis is specific to my machine and software of choice\n- efi boot\n- disk at sdb \n- netctl as network manager in boot environment\n- networkmanager as network manager in installation\n\ni edit this file in parallel to the installation and learning process; if you want to do this as well, install git from the boot environment (or use elinks to view the file through github)\n\n## connect to network\n\n```wifi-menu``` and follow instructions\n\ncheck connectivity\n\n```ping 8.8.8.8```\n\nin ```/etc/nsswitch.conf```, at the ```hosts``` entry, make sure ```dns``` is before ```[!UNAVAIL=return]```\n\ncheck dns acquisition\n\n```ping google.com```\n\n## partition, filesystems and mount\n\nbe careful, assume each step to erase all data on partition layout of the disk!\n\nmake sure on which device you want to work on, using ```lsblk```\n\nerase labels ```wipefs -a /dev/sdb```\n\nexample partition scheme below\n\n> you can use ```fdisk``` or ```cfdisk``` for example\n\npartition | size  | type             | desc\n----------|-------|------------------|----------------\nsdb1      | 550MB | EFI System       | boot partition\nsdb2      | 24GB  | Linux swap       | swap partition\nsdb3      | 32GB  | Linux filesystem  | root partition\nsdb4      | rest  | Linux filesystem  | home partition\n\nmake filesystems for the partitions\n\n```bash\nmkfs.fat -F32 /dev/sdb1\n\nmkswap /dev/sdb2\nswapon /dev/sdb2\n\nmkfs.ext4 /dev/sdb3\nmkfs.ext4 /dev/sdb4\n```\n\nmount partitions to filesystem\n\n```bash\nmount /dev/sdb3 /mnt\n\nmkdir /mnt/boot\nmkdir /mnt/boot/efi\nmkdir /mnt/home\n\nmount /dev/sdb4 /mnt/home\nmount /dev/sdb1 /mnt/boot/efi\n```\n\n## archlinux installation\n\n```bash\npacstrap /mnt \\\n    base base-devel \\\n    linux linux-firmware \\\n    grub efibootmgr \\\n    networkmanager \\\n    vim git\n```\n\n## installation setup\n\ngenerate fstab - ```genfstab -U /mnt >> /mnt/etc/fstab```\n\nchange root to installation - ```arch-chroot /mnt```\n\nedit file ```/etc/locale.gen``` and uncomment desired locale\n\ngenerate locale - ```locale-gen```\n\nadd set language - ```echo \"LANG=en_US.UTF-8\" > /etc/locale.conf```\n\nset timezone -\n\n```bash\nln -sf /usr/share/zoneinfo/Asia/Jerusalem /etc/localtime\nhwclock --systohc\n```\n\nset root password for linux installation - ```passwd```\n\n## grub\n\n```bash\ngrub-install --target=x86_64-efi --efi-directory=/boot/efi\ngrub-mkconfig -o /boot/grub/grub.cfg\n```\n\n## finalize\n\nback to bootable environment\n\n```exit```\n\nunmount all partitions\n\n```umount -R /mnt```\n\n```reboot```\n","html":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h1>arch boot spec</h1>\n    <p>this is specific to my machine and software of choice</p>\n    <ul>\n      <li>efi boot</li>\n      <li>disk at sdb</li>\n      <li>netctl as network manager in boot environment</li>\n      <li>networkmanager as network manager in installation</li>\n    </ul>\n    <p>i edit this file in parallel to the installation and learning process; if you want to do this as well, install git from the boot environment (or use elinks to view the file through github)</p>\n    <h2>connect to network</h2>\n    <p><code>wifi-menu</code> and follow instructions</p>\n    <p>check connectivity</p>\n    <p><code>ping 8.8.8.8</code></p>\n    <p>in <code>/etc/nsswitch.conf</code>, at the <code>hosts</code> entry, make sure <code>dns</code> is before <code>[!UNAVAIL=return]</code></p>\n    <p>check dns acquisition</p>\n    <p><code>ping google.com</code></p>\n    <h2>partition, filesystems and mount</h2>\n    <p>be careful, assume each step to erase all data on partition layout of the disk!</p>\n    <p>make sure on which device you want to work on, using <code>lsblk</code></p>\n    <p>erase labels <code>wipefs -a /dev/sdb</code></p>\n    <p>example partition scheme below</p>\n    <blockquote>\n      <p>you can use <code>fdisk</code> or <code>cfdisk</code> for example</p>\n    </blockquote>\n    <table>\n      <thead>\n        <tr>\n          <th>partition</th>\n          <th>size</th>\n          <th>type</th>\n          <th>desc</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>sdb1</td>\n          <td>550MB</td>\n          <td>EFI System</td>\n          <td>boot partition</td>\n        </tr>\n        <tr>\n          <td>sdb2</td>\n          <td>24GB</td>\n          <td>Linux swap</td>\n          <td>swap partition</td>\n        </tr>\n        <tr>\n          <td>sdb3</td>\n          <td>32GB</td>\n          <td>Linux filesystem</td>\n          <td>root partition</td>\n        </tr>\n        <tr>\n          <td>sdb4</td>\n          <td>rest</td>\n          <td>Linux filesystem</td>\n          <td>home partition</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>make filesystems for the partitions</p>\n    <pre><code class=\"hljs language-bash\">mkfs.fat -F32 /dev/sdb1\n\nmkswap /dev/sdb2\nswapon /dev/sdb2\n\nmkfs.ext4 /dev/sdb3\nmkfs.ext4 /dev/sdb4\n</code></pre>\n    <p>mount partitions to filesystem</p>\n    <pre><code class=\"hljs language-bash\">mount /dev/sdb3 /mnt\n\n<span class=\"hljs-built_in\">mkdir</span> /mnt/boot\n<span class=\"hljs-built_in\">mkdir</span> /mnt/boot/efi\n<span class=\"hljs-built_in\">mkdir</span> /mnt/home\n\nmount /dev/sdb4 /mnt/home\nmount /dev/sdb1 /mnt/boot/efi\n</code></pre>\n    <h2>archlinux installation</h2>\n    <pre><code class=\"hljs language-bash\">pacstrap /mnt \\\n    base base-devel \\\n    linux linux-firmware \\\n    grub efibootmgr \\\n    networkmanager \\\n    vim git\n</code></pre>\n    <h2>installation setup</h2>\n    <p>generate fstab - <code>genfstab -U /mnt >> /mnt/etc/fstab</code></p>\n    <p>change root to installation - <code>arch-chroot /mnt</code></p>\n    <p>edit file <code>/etc/locale.gen</code> and uncomment desired locale</p>\n    <p>generate locale - <code>locale-gen</code></p>\n    <p>add set language - <code>echo \"LANG=en_US.UTF-8\" > /etc/locale.conf</code></p>\n    <p>set timezone -</p>\n    <pre><code class=\"hljs language-bash\"><span class=\"hljs-built_in\">ln</span> -sf /usr/share/zoneinfo/Asia/Jerusalem /etc/localtime\nhwclock --systohc\n</code></pre>\n    <p>set root password for linux installation - <code>passwd</code></p>\n    <h2>grub</h2>\n    <pre><code class=\"hljs language-bash\">grub-install --target=x86_64-efi --efi-directory=/boot/efi\ngrub-mkconfig -o /boot/grub/grub.cfg\n</code></pre>\n    <h2>finalize</h2>\n    <p>back to bootable environment</p>\n    <p><code>exit</code></p>\n    <p>unmount all partitions</p>\n    <p><code>umount -R /mnt</code></p>\n    <p><code>reboot</code></p>\n  </body>\n</html>\n"}}]},"__N_SSG":true}