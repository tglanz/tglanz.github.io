{"pageProps":{"category":"Notes","articles":[{"id":"posts/mariadb-notes","filePath":"/home/runner/work/tglanz.github.io/tglanz.github.io/content/posts/mariadb-notes.md","metadata":{"title":"MariaDB Notes","description":null,"permalink":null,"priority":0,"tags":["MariaDB"],"categories":["Databases","Notes"]},"content":{"raw":"\nEverything is well documented in the MySQL/MariaDB documentations, but i'll gather some stuff here which I frequently encounter.\n\n## variables inspection\n\nrun ```mysqladmin variables```\n\n## notable variables/configurations\n\n__data_dir__ - the data directory\n\n> usually ```/var/lib/mysql```\n\n__lower_case_table_names__ - as the name suggests, make all tables lower case.\n\n__local_infile__ - enable loading tables from local files.\n\n> for commands such as: ```mysqlimport --local --fields-terminated-by=\"|\" -h localhost some-file.csv```\n\n## configuration files\n\nat least on the machine i am currently at, the root configuration is at ```/etc/my.cnf```. in turn it includes ```/etc/my.cnf.d```.\n\nin there, ill edit configurations in ```/etc/my.cnf.d/server.cnf```.\n\nfor example; to have all tables names with lower case and enable local in files, ill add the following under ```[mysqld]```\n- lower_case_table_names=1\n- local_infile=1\n\n## datadir notes\n\nwe can check where it is configured to be at using the variables inspection above, but usually it is at ```/var/lib/mysql```.\n\nit should be owned by the user/group running the process; those are usually mysql/mysql, but we can check this as well. assuming we start the process using ```systemd```, open the service file, and check what are the ```User``` and ```Group``` configured to be. the service file on my machine is at ```/usr/lib/systemd/system/mariadb.service```\n\n## complete reboot\n\nstop mariadb service - ```systemctl stop mariadb```\n\ndelete contents of datadir -```rm -rf /var/lib/mysql/*```\n\nremake infrastructure files - ```mysql_install_db --user=mysql --ldata=/var/lib/mysql```\n\nstart mariadb service - ```systemctl start mariadb```\n\n> when we need such a thing?\n> for example; there are configurations that only apply on installation, such as ```lower_case_table_names```\n","html":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <p>Everything is well documented in the MySQL/MariaDB documentations, but i'll gather some stuff here which I frequently encounter.</p>\n    <h2>variables inspection</h2>\n    <p>run <code>mysqladmin variables</code></p>\n    <h2>notable variables/configurations</h2>\n    <p><strong>data_dir</strong> - the data directory</p>\n    <blockquote>\n      <p>usually <code>/var/lib/mysql</code></p>\n    </blockquote>\n    <p><strong>lower_case_table_names</strong> - as the name suggests, make all tables lower case.</p>\n    <p><strong>local_infile</strong> - enable loading tables from local files.</p>\n    <blockquote>\n      <p>for commands such as: <code>mysqlimport --local --fields-terminated-by=\"|\" -h localhost some-file.csv</code></p>\n    </blockquote>\n    <h2>configuration files</h2>\n    <p>at least on the machine i am currently at, the root configuration is at <code>/etc/my.cnf</code>. in turn it includes <code>/etc/my.cnf.d</code>.</p>\n    <p>in there, ill edit configurations in <code>/etc/my.cnf.d/server.cnf</code>.</p>\n    <p>for example; to have all tables names with lower case and enable local in files, ill add the following under <code>[mysqld]</code></p>\n    <ul>\n      <li>lower_case_table_names=1</li>\n      <li>local_infile=1</li>\n    </ul>\n    <h2>datadir notes</h2>\n    <p>we can check where it is configured to be at using the variables inspection above, but usually it is at <code>/var/lib/mysql</code>.</p>\n    <p>it should be owned by the user/group running the process; those are usually mysql/mysql, but we can check this as well. assuming we start the process using <code>systemd</code>, open the service file, and check what are the <code>User</code> and <code>Group</code> configured to be. the service file on my machine is at <code>/usr/lib/systemd/system/mariadb.service</code></p>\n    <h2>complete reboot</h2>\n    <p>stop mariadb service - <code>systemctl stop mariadb</code></p>\n    <p>delete contents of datadir -<code>rm -rf /var/lib/mysql/*</code></p>\n    <p>remake infrastructure files - <code>mysql_install_db --user=mysql --ldata=/var/lib/mysql</code></p>\n    <p>start mariadb service - <code>systemctl start mariadb</code></p>\n    <blockquote>\n      <p>\n        when we need such a thing?\n        for example; there are configurations that only apply on installation, such as <code>lower_case_table_names</code>\n      </p>\n    </blockquote>\n  </body>\n</html>\n"}},{"id":"posts/postgres-notes","filePath":"/home/runner/work/tglanz.github.io/tglanz.github.io/content/posts/postgres-notes.md","metadata":{"title":"Postgres Notes","description":null,"permalink":null,"priority":0,"tags":["PostgreSQL"],"categories":["Notes","Databases"]},"content":{"raw":"\nWithin the REPL, all buit-in commands are prefixed with ```\\```. For example;\n\n```\n\\?              Displays help page\n\\q              Quits the REPL\n\\l              Lists all databases\n\\c {database}   Connect to a different database\n```\n\n### Roles\n\nA Role is the single entity for authentication/authorization. According to how it is set up, it can act as a user, a group or both.\n\nCreate a role\n\n```sql\nCREATE ROLE \"somerole\"\n```\n\nGrant login to the role\n\n```sql\nALTER ROLE \"somerole\" WITH LOGIN;\n```\n\n### Serial (Auto Increment)\n\n```sql\nCREATE TABLE some_table (\n  id SERIAL PRIMARY KEY,\n  other varchar(20)\n)\n```\n","html":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <p>Within the REPL, all buit-in commands are prefixed with <code>\\</code>. For example;</p>\n    <pre><code class=\"hljs language-properties\"><span class=\"hljs-attr\">\\?</span>              <span class=\"hljs-string\">Displays help page</span>\n<span class=\"hljs-attr\">\\q</span>              <span class=\"hljs-string\">Quits the REPL</span>\n<span class=\"hljs-attr\">\\l</span>              <span class=\"hljs-string\">Lists all databases</span>\n<span class=\"hljs-attr\">\\c</span> <span class=\"hljs-string\">{database}   Connect to a different database</span>\n</code></pre>\n    <h3>Roles</h3>\n    <p>A Role is the single entity for authentication/authorization. According to how it is set up, it can act as a user, a group or both.</p>\n    <p>Create a role</p>\n    <pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE</span> ROLE \"somerole\"\n</code></pre>\n    <p>Grant login to the role</p>\n    <pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">ALTER</span> ROLE \"somerole\" <span class=\"hljs-keyword\">WITH</span> LOGIN;\n</code></pre>\n    <h3>Serial (Auto Increment)</h3>\n    <pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> some_table (\n  id SERIAL <span class=\"hljs-keyword\">PRIMARY</span> KEY,\n  other <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">20</span>)\n)\n</code></pre>\n  </body>\n</html>\n"}}]},"__N_SSG":true}